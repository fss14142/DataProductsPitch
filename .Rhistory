abline(v = 0, col="blue", lwd=3)
stripchart(datos$dato[datos$tipo==1], pch=20, add=TRUE, method="jitter", jitter = 0.02, col="blue")
#stripchart(datos$dato[datos$tipo==1] pch=20, add=TRUE,vertical = TRUE, method="jitter", jitter = 0.02)
#stripchart(datos$dato[datos$tipo==2], pch=20, add=TRUE,vertical = TRUE, method="jitter", jitter = 0.02)
#stripchart(dato ~ tipo, data=datos, pch=20, add=TRUE,vertical = TRUE, method="jitter", jitter = 0.02)
hist(datos$dato[datos$tipo==1], main="", xlab="", col="red")
hist(datos$dato[datos$tipo==2], main="", xlab="")
rm(list=ls())
set.seed(2014)
(datos00 = sample(0:12, 12, replace = TRUE))
mean(datos00)
boxplot(datos00)
datos1 = c(5, 5, 5, 5, 6, 6, 6, 6, 7, 7, 7, 7)
mean(datos1)
datos2 = c(0, 1, 2, 0, 1, 2, 0, 1, 2, 1, 1, 61)
mean(datos2)
par(mfrow=c(1,2))
boxplot(datos1, col="lightgreen")
boxplot(datos2, col="darkseagreen")
par(mfrow=c(1,1))
library(MASS)
datos03 = mvrnorm(n = 150, mu = 0, Sigma = 1, empirical = TRUE)
datos04 = runif(n = 150, min = -3, max=3)
datos = data.frame(dato = c(datos03, datos04), tipo = rep(1:2, c(150,150)))
par(mfrow = c(2,2), lwd=3)
boxplot(datos$dato[datos$tipo==1], horizontal = TRUE)
abline(v = 0, col="red", lwd=3)
stripchart(datos$dato[datos$tipo==1], pch=20, add=TRUE, method="jitter", jitter = 0.02, col="red")
boxplot(datos$dato[datos$tipo==2], horizontal = TRUE)
abline(v = 0, col="blue", lwd=3)
stripchart(datos$dato[datos$tipo==1], pch=20, add=TRUE, method="jitter", jitter = 0.02, col="blue")
#stripchart(datos$dato[datos$tipo==1] pch=20, add=TRUE,vertical = TRUE, method="jitter", jitter = 0.02)
#stripchart(datos$dato[datos$tipo==2], pch=20, add=TRUE,vertical = TRUE, method="jitter", jitter = 0.02)
#stripchart(dato ~ tipo, data=datos, pch=20, add=TRUE,vertical = TRUE, method="jitter", jitter = 0.02)
hist(datos$dato[datos$tipo==1], main="", xlab="", col="red")
hist(datos$dato[datos$tipo==2], main="", xlab="", col="blue")
rm(list = ls())
# set.seed(2014)
# n = 10000
# dado1 = sample(1:6, n, replace=TRUE)
# dado2 = sample(1:6, n, replace=TRUE)
# X = dado1 + dado2
# W = 3 * X - 4
#
# mean(W)
# V = X^2
# mean(V)
valoresX = 2:12
probabilidadesX = c(1:6,5:1) / 36
(muX = sum(valoresX * probabilidadesX))
(varianzaX = sum((valoresX - muX)^2 * probabilidadesX) )
(valoresV = valoresX^2)
(probabilidadesV = probabilidadesX)
(muV = sum(valoresV * probabilidadesV))
varianzaX
muV - (muX)^2
n = 100000
muestraX = sample(valoresX, size = n, replace = TRUE, prob = probabilidadesX)
mean(muestraX)
(n-1)*var(muestraX)/n
muestraV = muestraX^2
mean(muestraV)
mean(muestraV) - (mean(muestraX))^2
rm(list=ls())
(n = sample(3:12, 1))
(valores = sort(sample(1:20, n )))
(probabilidades = sample(1:15,n))
probabilidades = probabilidades/sum(probabilidades)
y0 = c(0,cumsum(probabilidades), 1)
x0 = c(min(valores)-1,valores, max(valores)+1)
xA = x0[-length(x0)]
xB = x0[-1]
yA = y0[-length(y0)]
plot(x0, y0, type="n")
segments(xA,yA,xB,yA, lwd=4, col="red")
points(xA, yA, pch=16, col="red", cex=1.5)
segments(valores, yA[-length(yA)] , valores, yA[-1], lty=2, col="blue", lwd=4)
rm(list=ls())
valor = c(6, 7, 11, 18, 20, 24, 35, 45, 52, 55, 56, 59, 62, 74, 84)
valor = c(6, 7, 11, 18, 20, 24, 35, 45, 52, 55, 56, 59, 62, 74, 84)
frec = c(28, 9, 26, 15, 25, 39, 16, 35, 31, 40, 5, 48, 49, 20, 10)
(media = sum(valor * frec))
(media = sum(valor * frec) / sum(frec))
var = sum((valor - media)^2 * frec) / sum(frec)
(var = sum((valor - media)^2 * frec) / sum(frec))
(var = sum((valor - media)^2 * frec) / (sum(frec) - 1))
pB = c(9 ,8,23,30,7)/77
sum(pB)
pAB = c(29, 3, 23, 22, 11)/34
pAB[4]*pB[4]/(sum(pB*pAB))
35/39
datos = c(11,12,3,2,9,5,9,3,9,9,4,5,2,12,2,9,4,0,4,12)
median(datos)
sum(pB*pAB)
1 - 0.08974
30*22
sum(pB*pAB) * 77*34
660/1551
pAB
pB*pAB
sum(pB*pAB)
pAB[4]*pB[4]
frec = c(28, 9, 26, 15, 25, 39, 16, 35, 31, 40, 5, 48, 49, 20, 10)
valor = c(6, 7, 11, 18, 20, 24, 35, 45, 52, 55, 56, 59, 62, 74, 84)
frec = c(28, 9, 26, 15, 25, 39, 16, 35, 31, 40, 5, 48, 49, 20, 10)
(media = sum(valor * frec) / sum(frec))
(var = sum((valor - media)^2 * frec) / sum(frec))
(var = sum((valor - media)^2 * frec) / (sum(frec) - 1))
rm(list=ls())
median(c(2,4,11,11,10,12,6,12,7,6,11,10,2,9,12,6,1,10,1,10,12,4))
valor=c(3, 7, 12, 38, 42, 55, 61, 68, 69, 71, 79, 87, 91, 93)
frec = c(39, 34, 20, 46, 36, 48, 29, 6, 15, 25, 42, 11, 47, 7)
(media = sum(valor * frec) / sum(frec))
(var = sum((valor - media)^2 * frec) / sum(frec))
(sd = sqrt(var))
pB = c(18, 20, 11)
pB = c(18, 20, 11) / 49
pAB = c(22, 5, 30) / 31
pB = c(18, 20, 11) / 49
pAB = c(22, 5, 30) / 31
pB * PAB
pB * pAB
(media = sum(valor * frec) / sum(frec))
(var = sum((valor - media)^2 * frec) / sum(frec))
var(valor)
nn = length(datos)
(nn -1) * var(valor) /nn
nn = length(datos)
(nn -1) * var(valor) /nn
nn = length(valor)
(nn -1) * var(valor) /nn
var(valor)
varMAL01 = (nn -1) * var(valor) /nn
(varMAL01 = (nn -1) * var(valor) /nn)
(varMAL02 =  var(valor))
sdMAL01 = sqrt(varMAL01)
(sdMAL01 = sqrt(varMAL01))
(sdMAL02 = sqrt(varMAL02))
(sdMAL02 = sqrt(varMAL02))
(sdMAL01 = sqrt(varMAL01))
tabla01 = matrix(c(355, 369, 214, 513), ncol=2)
(tabla01 = matrix(c(355, 369, 214, 513), ncol=2))
tabla02 = addmargins(tabla01)
(tabla02 = addmargins(tabla01))
tabla01 / rowsum(tabla01)
rowsum(tabla01)
tabla01 / colsum(tabla01)
tabla01 / colSums(tabla01)
t(t(tabla01) / colSums(t(tabla01)))
colSums(tabla01 / colSums(tabla01))
tabla01 / colSums(tabla01)
tabla01 / colSums(tabla01)
t(t(tabla01) / colSums(t(tabla01)))
(tablaContingencia = matrix(c(355, 369, 214, 513), nrow=2))
colnames(tablaContingencia) = c("ENF","SANO" )
rownames(tablaContingencia) = c("Prueba+", "Prueba-" )
tablaContingencia
sum(tablaContingencia)
# A?adimos m?rgenes
(tablaContingenciaAmpliada = addmargins(tablaContingencia))
# Intersecciones
(tablaContingenciaRel = tablaContingenciaAmpliada / sum(tablaContingencia))
# Dividimos cada fila por su suma (usando prop.table):
(tablaMarginalFilas = prop.table(tablaContingencia, margin = 1))
addmargins(tablaMarginalFilas) # Condicionadas por prueba+ / prueba-
# Dividimos cada columna por su suma:
(tablaMarginalColumnas = prop.table(tablaContingencia, margin = 2))
addmargins(tablaMarginalColumnas)  # Condicionadas por sano / enfermo
colnames(tablaContingencia) = c("Prueba+", "Prueba-" )
rownames(tablaContingencia) = c("ENF","SANO" )
tablaContingencia
sum(tablaContingencia)
# A?adimos m?rgenes
(tablaContingenciaAmpliada = addmargins(tablaContingencia))
# Intersecciones
(tablaContingenciaRel = tablaContingenciaAmpliada / sum(tablaContingencia))
# Dividimos cada fila por su suma (usando prop.table):
(tablaMarginalFilas = prop.table(tablaContingencia, margin = 1))
addmargins(tablaMarginalFilas) # Condicionadas por prueba+ / prueba-
# Dividimos cada columna por su suma:
(tablaMarginalColumnas = prop.table(tablaContingencia, margin = 2))
addmargins(tablaMarginalColumnas)  # Condicionadas por sano / enfermo
369/724
valor=c(3, 7, 12, 38, 42, 55, 61, 68, 69, 71, 79, 87, 91, 93)
frec = c(39, 34, 20, 46, 36, 48, 29, 6, 15, 25, 42, 11, 47, 7)
(media = sum(valor * frec) / sum(frec))
(sd = sqrt(var))
(var = sum((valor - media)^2 * frec) / sum(frec))
nn = length(valor)
(varMAL01 = (nn -1) * var(valor) /nn)
(varMAL02 =  var(valor))
(sdMAL01 = sqrt(varMAL01))
(sdMAL02 = sqrt(varMAL02))
3/31
369/1451
802/1451
pB = c(18, 20, 11) / 49
pAB = c(22, 5, 30) / 31
pB * pAB
sum(pB * pAB)
valor=c(3, 7, 12, 38, 42, 55, 61, 68, 69, 71, 79, 87, 91, 93)
frec = c(39, 34, 20, 46, 36, 48, 29, 6, 15, 25, 42, 11, 47, 7)
(media = sum(valor * frec) / sum(frec))
(var = sum((valor - media)^2 * frec) / sum(frec))
(sd = sqrt(var))
nn = length(valor)
(varMAL01 = (nn -1) * var(valor) /nn)
(varMAL02 =  var(valor))
(sdMAL01 = sqrt(varMAL01))
(sdMAL02 = sqrt(varMAL02))
(mediaMAL = mean(valor))
24/26
(335 +369)
(tablaContingencia = matrix(c(355, 369, 214, 513), nrow=2))
colnames(tablaContingencia) = c("Prueba+", "Prueba-" )
rownames(tablaContingencia) = c("ENF","SANO" )
tablaContingencia
sum(tablaContingencia)
# A?adimos m?rgenes
(tablaContingenciaAmpliada = addmargins(tablaContingencia))
valor=c(3, 7, 12, 38, 42, 55, 61, 68, 69, 71, 79, 87, 91, 93)
frec = c(39, 34, 20, 46, 36, 48, 29, 6, 15, 25, 42, 11, 47, 7)
(var = sum((valor - media)^2 * frec) / sum(frec))
(media = sum(valor * frec) / sum(frec))
(sd = sqrt(var))
nn = length(valor)
(varMAL01 = (nn -1) * var(valor) /nn)
(varMAL02 =  var(valor))
(sdMAL01 = sqrt(varMAL01))
(sdMAL02 = sqrt(varMAL02))
(mediaMAL = mean(valor))
valor=c(5, 9, 13, 22, 27, 33, 44, 49, 55, 66, 69, 73, 85, 88)
frec = c(39, 34, 20, 46, 36, 48, 29, 6, 15, 25, 42, 11, 47, 7)
(media = sum(valor * frec) / sum(frec))
(var = sum((valor - media)^2 * frec) / sum(frec))
(sd = sqrt(var))
nn = length(valor)
(varMAL01 = (nn -1) * var(valor) /nn)
(varMAL02 =  var(valor))
(sdMAL01 = sqrt(varMAL01))
(sdMAL02 = sqrt(varMAL02))
pB = c(20, 4, 1, 12) / 37
pB = c(20, 4, 1, 12) / 37
pAB = c(3, 17, 18, 22) /  28
pB * pAB
sum(pB * pAB)
20/99
(var = sum((valor - media)^2 * frec) / sum(frec))
(sd = sqrt(var))
nn = length(valor)
(varMAL01 = (nn -1) * var(valor) /nn)
(varMAL02 =  var(valor))
(sdMAL01 = sqrt(varMAL01))
(sdMAL02 = sqrt(varMAL02))
(mediaMAL = mean(valor))
sort(c(2,4,11,11,10,12,6,12,7,6,11,10,2,9,12,6,1,10,1,10,12,4))
sort(c(3,9,12,12,1,10,5,11,10,5,6,9,1,8,0,6,10,6,9))
median(c(2,4,11,11,10,12,6,12,7,6,11,10,2,9,12,6,1,10,1,10,12,4))
sort(c(3,9,12,12,1,10,5,11,10,5,6,9,1,8,0,6,10,6,9))
median(c(3,9,12,12,1,10,5,11,10,5,6,9,1,8,0,6,10,6,9))
23/99
valor=c(5, 9, 13, 22, 27, 33, 44, 49, 55, 66, 69, 73, 85, 88)
frec = c(39, 34, 20, 46, 36, 48, 29, 6, 15, 25, 42, 11, 47, 7)
(media = sum(valor * frec) / sum(frec))
(var = sum((valor - media)^2 * frec) / sum(frec))
(sd = sqrt(var))
nn = length(valor)
(varMAL01 = (nn -1) * var(valor) /nn)
(varMAL02 =  var(valor))
(sdMAL01 = sqrt(varMAL01))
(sdMAL02 = sqrt(varMAL02))
(mediaMAL = mean(valor))
pB = c(20, 4, 1, 12) / 37
pAB = c(3, 17, 18, 22) /  28
pB = c(20, 4, 1, 12) / 37
pAB = c(3, 17, 18, 22) /  28
pB * pAB
sum(pB * pAB)
33/37
1295 - 563
563 - 184
51-28
(184*51)/(51-28)
408 - 184
732 - 224
732 - 224 + 379
28*732/51
224/732
1 - 224/732
28/51
(28/23)*184
k=5
nmuestras= 20000
prueba= sample (1:12, k*nmuestras, replace= TRUE )
cuantosdistintos= c()
k=5
nmuestras= 20000
prueba= matrix(sample (1:12, k*nmuestras, replace= TRUE ), ncol = nmuestras)
head(prueba)
k=5
nmuestras= 20000
prueba= matrix(sample(1:12, k*nmuestras, replace= TRUE ), ncol = nmuestras)
head(prueba)
k=5
nmuestras= 20000
prueba= matrix(sample(1:12, k * nmuestras, replace= TRUE ), nrow = nmuestras)
head(prueba)
set.seed(2014)
k=5
nmuestras= 20000
prueba= matrix(sample(1:12, k * nmuestras, replace= TRUE ), nrow = nmuestras)
head(prueba)
cuantosDistintos= c()
cuantosDistintos= c()
for(i in 1:nmuestras){
cuantosDistintos = c(cuantosDistintos, length(unique(prueba[i, ])))
}
table(cuantosDistintos < 5)
nMuestras= 20000
table(cuantosDistintos < 5) / nMuestras
set.seed(2014)
k=5
nMuestras= 20000
prueba= matrix(sample(1:12, k * nMuestras, replace= TRUE ), nrow = nMuestras)
head(prueba)
cuantosDistintos2 = apply(prueba, 1, function(x){max(table(x))} )
table(prueba[3,])
cuantosDistintos2 = apply(prueba, 1, function(x){length(unique(x))} )
set.seed(2014)
set.seed(2014)
k=5
prueba= matrix(sample(1:12, k * nMuestras, replace= TRUE ), nrow = nMuestras)
head(prueba)
# Primer método usando un bucle for.
nMuestras= 20000
cuantosDistintos= c()
for(i in 1:nMuestras){
cuantosDistintos = c(cuantosDistintos, length(unique(prueba[i, ])))
}
table(cuantosDistintos < 5) / nMuestras
# Segundo método, usando apply.
cuantosDistintos2 = apply(prueba, 1, function(x){length(unique(x))} )
table(cuantosDistintos2)
table(cuantosDistintos2<5)
table(cuantosDistintos2<5) / nMuestras
son1 = (nMuestras == 1)
son1 = (nMuestras == 1)
son2 = (nMuestras == 2)
son3 = (nMuestras == 3)
son4 = (nMuestras == 4)
son5 = (nMuestras == 5)
son6 = (nMuestras == 6)
son7 = (nMuestras == 7)
son8 = (nMuestras == 8)
son9 = (nMuestras == 9)
son10 = (nMuestras == 10)
son11 = (nMuestras == 11)
son12 = (nMuestras == 12)
son1 = (prueba == 1)
son2 = (prueba == 2)
son3 = (prueba == 3)
son4 = (prueba == 4)
son5 = (prueba == 5)
son6 = (prueba == 6)
son7 = (prueba == 7)
son8 = (prueba == 8)
son9 = (prueba == 9)
son10 = (prueba == 10)
son11 = (prueba == 11)
son12 = (prueba == 12)
son1 = rowSums(prueba == 1)
son2 = rowSums(prueba == 2)
son3 = rowSums(prueba == 3)
son4 = rowSums(prueba == 4)
son5 = rowSums(prueba == 5)
son6 = rowSums(prueba == 6)
son7 = rowSums(prueba == 7)
son8 = rowSums(prueba == 8)
son9 = rowSums(prueba == 9)
son10 = rowSums(prueba == 10)
son11 = rowSums(prueba == 11)
son12 = rowSums(prueba == 12)
(son1 > 1)
cuantosDistintos3 = sum( (son1 > 1) | (son1 > 2) | (son1 > 3) | (son1 > 4) | (son1 > 5) | (son1 > 6) |
(son1 > 7) | (son1 > 8) | (son1 > 9) | (son1 > 10) | (son1 > 11) | (son1 > 12)  )
table(cuantosDistintos3) / nMuestras
cuantosDistintos3 = sum( (son1 > 1) | (son2 > 1) | (son3 > 1) | (son4 > 1) | (son5 > 1) | (son6 > 1) |
(son7 > 1) | (son8 > 1) | (son9 > 1) | (son10 > 1) | (son11 > 1) | (son12 > 1)  )
table(cuantosDistintos3) / nMuestras
cuantosDistintos3 = (son1 > 1) | (son2 > 1) | (son3 > 1) | (son4 > 1) | (son5 > 1) | (son6 > 1) |
(son7 > 1) | (son8 > 1) | (son9 > 1) | (son10 > 1) | (son11 > 1) | (son12 > 1)
table(cuantosDistintos3) / nMuestras
set.seed(2014)
k=5
nMuestras= 20000
prueba= matrix(sample(1:12, k * nMuestras, replace= TRUE ), nrow = nMuestras)
head(prueba)
# Primer método usando un bucle for.
cuantosDistintos= c()
for(i in 1:nMuestras){
cuantosDistintos = c(cuantosDistintos, length(unique(prueba[i, ])))
}
table(cuantosDistintos < 5) / nMuestras
# Segundo método, usando apply (el más rápido).
cuantosDistintos2 = apply(prueba, 1, function(x){length(unique(x))} )
table(cuantosDistintos2<5) / nMuestras
# Tercer método, operadores lógicos "a mano (desaconsejado)".
son1 = rowSums(prueba == 1)
son2 = rowSums(prueba == 2)
son3 = rowSums(prueba == 3)
son4 = rowSums(prueba == 4)
son5 = rowSums(prueba == 5)
son6 = rowSums(prueba == 6)
son7 = rowSums(prueba == 7)
son8 = rowSums(prueba == 8)
son9 = rowSums(prueba == 9)
son10 = rowSums(prueba == 10)
son11 = rowSums(prueba == 11)
son12 = rowSums(prueba == 12)
cuantosDistintos3 = (son1 > 1) | (son2 > 1) | (son3 > 1) | (son4 > 1) | (son5 > 1) | (son6 > 1) |
(son7 > 1) | (son8 > 1) | (son9 > 1) | (son10 > 1) | (son11 > 1) | (son12 > 1)
table(cuantosDistintos3) / nMuestras
muestra = c(3.14, 3.71, 2.77, 4.08, 4.18, 1.51, 3.65, 3.41, 4.51, 2.27, 3.28,
2.26, 2.80, 2.54, 3.77)
numRemuestras = 10000
mediasRemuestras = numeric(10000) # este vector almacenara las medias de las remuestras
tamannoRemuestra = 20
numRemuestras = 10000
mediasRemuestras = numeric(10000) # este vector almacenara las medias de las remuestras
mediasRemuestras = numeric(10000) # este vector almacenara las medias de las remuestras
remuestra = sample(muestra, size = tamannoRemuestra, replace = TRUE)
mediasRemuestras[i] = mean(remuestra)
for(i in 1:numRemuestras){
# muestras de tamaño tamannoRemuestra y con reemplazamiento
remuestra = sample(muestra, size = tamannoRemuestra, replace = TRUE)
mediasRemuestras[i] = mean(remuestra)
}
quantile(mediasRemuestras, probs = c(0.025, 0.975))
hist(mediasRemuestras, breaks = 10)
(xbar = mean(muestra))
quantile(mediasRemuestras, probs = c(0.025, 0.975))
tamannoRemuestra = 1500
numRemuestras = 100000
mediasRemuestras = numeric(10000) # este vector almacenara las medias de las remuestras
tamannoRemuestra = 50
numRemuestras = 10000
tamannoRemuestra = 50
numRemuestras = 50000
mediasRemuestras = numeric(10000) # este vector almacenara las medias de las remuestras
for(i in 1:numRemuestras){
# muestras de tamaño tamannoRemuestra y con reemplazamiento
remuestra = sample(muestra, size = tamannoRemuestra, replace = TRUE)
mediasRemuestras[i] = mean(remuestra)
}
barplot(dbinom(0:105, 105, 1/7))
barplot(dbinom(0:35, 35, 1/7))
setwd("C:/Dropbox/Coursera/DataScienceSpecialization/09-DevelopingDataProducts/project/slidify")
library(slidify)
author("dataProductsPitch")
slidify(inputFile = "index.Rmd")
slidify(inputFile = "index.Rmd")
slidify(inputFile = "index.Rmd")
slidify(inputFile = "index.Rmd")
slidify(inputFile = "index.Rmd")
browseURL(url = "index.html")
slidify(inputFile = "index.Rmd")
browseURL(url = "index.html")
slidify(inputFile = "index.Rmd")
slidify(inputFile = "index.Rmd")
slidify(inputFile = "index.Rmd")
slidify(inputFile = "index.Rmd")
slidify(inputFile = "index.Rmd")
setwd("C:/Dropbox/Coursera/DataScienceSpecialization/09-DevelopingDataProducts/project/slidify/ebirdData")
slidify(inputFile = "index.Rmd")
browseURL(url = "index.html")
setwd("C:/Dropbox/Coursera/DataScienceSpecialization/09-DevelopingDataProducts/project/slidify")
slidify(inputFile = "index.Rmd")
setwd("C:/Dropbox/Coursera/DataScienceSpecialization/09-DevelopingDataProducts/project/slidify/dataProductsPitch/")
slidify(inputFile = "index.Rmd")
slidify(inputFile = "index.Rmd")
slidify(inputFile = "index.Rmd")
require(rCharts)
stateCode="AR"
stateLat = 34.9513
stateLon = -92.3809
species="Chen%20caerulescens"
daysBack=7
stateData = getData(stateCode, species, daysBack)
stateMap <- Leaflet$new()
stateMap$setView(c(stateLat, stateLon), zoom=7)
stateMap$set(width=600, height=400)
if(length(stateData)>0){
for(i in 1:nrow(stateData)){
siteCoords = c(stateData$lat[i], stateData$lng[i])
siteName = stateData$locName[i]
siteNumber = stateData$howMany[i]
siteDate = stateData$obsDt[i]
sitePopup = paste0("<p> Site name: ",siteName,"<br>", collapse = "")
sitePopup = paste0(sitePopup, "Coordinates (lat, long): ",
signif(siteCoords[1],4), ",", signif(siteCoords[2],4),"</br>", collapse = "")
sitePopup = paste0(sitePopup, "N. of birds: ", siteNumber,"</br>", collapse = "")
sitePopup = paste0(sitePopup, "Date: ", siteDate,"</p>", collapse = "")
stateMap$marker(siteCoords, bindPopup = sitePopup)
}
}
stateMap$print("stateMap", include_assets=TRUE, cdn=TRUE)
install.packages("googleVis")
require(rCharts)
hair_eye_male <- subset(as.data.frame(HairEyeColor), Sex == "Male")
n1 <- nPlot(Freq ~ Hair, group = "Eye", data = hair_eye_male, type = "multiBarChart")
n1$print('mychart1', include_assets = TRUE, cdn = TRUE)
}
